{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kolkov/ngx-gallery/lib/ngx-gallery.service.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-animation.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-order.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-layout.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image-size.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-options.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-ordered-image.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.module.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","getFileType","fileSource","startsWith","substr","Math","min","indexOf","fileExtension","split","pop","toLowerCase","get","delete","Renderer2","Injectable","providedIn","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","index","previewOpen","EventEmitter","previewClose","activeChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","src","type","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","imageClick","canChangeImage","reset","selectedIndex","getImages","lazyLoading","indexes_1","prevIndex","nextIndex","filter","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","action","icon","disabled","titleText","onClick","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryImageSize","Cover","Contain","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","thumbnailClasses","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryComponent","myElement","options","imagesReady","change","previewChange","oldImagesLength","prevBreakpoint","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","forEach","big","medium","small","smallImages","mediumImages","NgxGalleryOrderedImage","bigImages","labels","label","breakpoints","window","concat","__spread","a","sort","combineOptions","second","keys","val","HostBinding","encapsulation","ViewEncapsulation","None","providers","NgxGalleryArrowsComponent","prevClick","nextClick","handlePrevClick","handleNextClick","NgxGalleryActionComponent","closeClick","NgxGalleryBulletsComponent","active","bulletChange","getBullets","handleChange","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","__","constructor","create","__extends","HammerGestureConfig","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {ElementRef, Injectable, Renderer2} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxGalleryService {\n  private swipeHandlers: Map<string, (() => void)[]> = new Map<string, (() => void)[]>();\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: () => void, prevHandler: () => void): void {\n\n    const handlers = this.getSwipeHandlers(id);\n\n    // swipeleft and swiperight are available only if hammerjs is included\n    try {\n      if (status && !handlers) {\n        this.swipeHandlers.set(id, [\n          this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n          this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n        ]);\n      } else if (!status && handlers) {\n        handlers.map((handler) => handler());\n        this.removeSwipeHandlers(id);\n      }\n    } catch (e) {\n    }\n  }\n\n  validateUrl(url: string): string {\n    if (url.replace) {\n      return url.replace(new RegExp(' ', 'g'), '%20')\n        .replace(new RegExp('\\'', 'g'), '%27');\n    } else {\n      return url;\n    }\n  }\n\n  getBackgroundUrl(image: string) {\n    return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  getFileType (fileSource: string): string {\n    if (fileSource.startsWith('data:')) {\n      return fileSource.substr(5, Math.min(fileSource.indexOf(';'), fileSource.indexOf('/')) - 5);\n    }\n    const fileExtension = fileSource.split('.').pop().toLowerCase();\n    if (!fileExtension\n      || fileExtension === 'jpeg' || fileExtension === 'jpg'\n      || fileExtension === 'png' || fileExtension === 'bmp'\n      || fileExtension === 'gif') {\n      return 'image';\n    }\n    else if (fileExtension === 'avi' || fileExtension === 'flv'\n      || fileExtension === 'wmv' || fileExtension === 'mov'\n      || fileExtension === 'mp4') {\n      return 'video';\n    }\n    return 'unknown';\n}\n\n  private getSwipeHandlers(id: string): (() => void)[] | undefined {\n    return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n    this.swipeHandlers.delete(id);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\n\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss'],\n  // encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnDestroy, OnChanges {\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  type: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() activeChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: () => void;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService, private renderer: Renderer2,\n              private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'preview', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n  }\n\n  onKeyDown(e) {\n    if (this.isOpen) {\n      if (this.keyboardNavigation) {\n        if (this.isKeyboardPrev(e)) {\n          this.showPrev();\n        } else if (this.isKeyboardNext(e)) {\n          this.showNext();\n        }\n      }\n      if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n        this.close();\n      }\n    }\n  }\n\n  open(index: number): void {\n    this.previewOpen.emit();\n\n    this.index = index;\n    this.isOpen = true;\n    this.show(true);\n\n    if (this.forceFullscreen) {\n      this.manageFullscreen();\n    }\n\n    this.keyDownListener = this.renderer.listen('window', 'keydown', (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n    this.isOpen = false;\n    this.closeFullscreen();\n    this.previewClose.emit();\n\n    this.stopAutoPlay();\n\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  imageMouseEnter(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  imageMouseLeave(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  startAutoPlay(): void {\n    if (this.autoPlay) {\n      this.stopAutoPlay();\n\n      this.timer = setTimeout(() => {\n        if (!this.showNext()) {\n          this.index = -1;\n          this.showNext();\n        }\n      }, this.autoPlayInterval);\n    }\n  }\n\n  stopAutoPlay(): void {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  showAtIndex(index: number): void {\n    this.index = index;\n    this.show();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext()) {\n      this.index++;\n\n      if (this.index === this.images.length) {\n        this.index = 0;\n      }\n\n      this.show();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev()) {\n      this.index--;\n\n      if (this.index < 0) {\n        this.index = this.images.length - 1;\n      }\n\n      this.show();\n    }\n  }\n\n  canShowNext(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index > 0;\n    } else {\n      return false;\n    }\n  }\n\n  manageFullscreen(): void {\n    if (this.fullscreen || this.forceFullscreen) {\n      const doc = document as any;\n\n      if (!doc.fullscreenElement && !doc.mozFullScreenElement\n        && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n        this.openFullscreen();\n      } else {\n        this.closeFullscreen();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n    return this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  getFileType (fileSource: string): string {\n    return this.helperService.getFileType(fileSource);\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn()) {\n      this.zoomValue += this.zoomStep;\n\n      if (this.zoomValue > this.zoomMax) {\n        this.zoomValue = this.zoomMax;\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut()) {\n      this.zoomValue -= this.zoomStep;\n\n      if (this.zoomValue < this.zoomMin) {\n        this.zoomValue = this.zoomMin;\n      }\n\n      if (this.zoomValue <= 1) {\n        this.resetPosition();\n      }\n    }\n  }\n\n  rotateLeft(): void {\n    this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n    this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n    return this.zoomValue < this.zoomMax;\n  }\n\n  canZoomOut(): boolean {\n    return this.zoomValue > this.zoomMin;\n  }\n\n  canDragOnZoom() {\n    return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n    if (this.canDragOnZoom()) {\n      this.initialX = this.getClientX(e);\n      this.initialY = this.getClientY(e);\n      this.initialLeft = this.positionLeft;\n      this.initialTop = this.positionTop;\n      this.isMove = true;\n\n      e.preventDefault();\n    }\n  }\n\n  mouseUpHandler(e): void {\n    this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n    if (this.isMove) {\n      this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n      this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n    }\n  }\n\n  private getClientX(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n    if (this.zoom) {\n      this.positionLeft = 0;\n      this.positionTop = 0;\n    }\n  }\n\n  private isKeyboardNext(e): boolean {\n    return e.keyCode === 39;\n  }\n\n  private isKeyboardPrev(e): boolean {\n    return e.keyCode === 37;\n  }\n\n  private isKeyboardEsc(e): boolean {\n    return e.keyCode === 27;\n  }\n\n  private openFullscreen(): void {\n    const element = document.documentElement as any;\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  private closeFullscreen(): void {\n    if (this.isFullscreen()) {\n      const doc = document as any;\n\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.mozCancelFullScreen) {\n        doc.mozCancelFullScreen();\n      } else if (doc.webkitExitFullscreen) {\n        doc.webkitExitFullscreen();\n      }\n    }\n  }\n\n  private isFullscreen() {\n    const doc = document as any;\n\n    return doc.fullscreenElement || doc.webkitFullscreenElement\n      || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n  private show(first = false) {\n    this.loading = true;\n    this.stopAutoPlay();\n\n    this.activeChange.emit(this.index);\n\n    if (first || !this.animation) {\n      this._show();\n    } else {\n      setTimeout(() => this._show(), 600);\n    }\n  }\n\n  private _show() {\n    this.zoomValue = 1;\n    this.rotateValue = 0;\n    this.resetPosition();\n\n    this.src = this.getSafeUrl(this.images[this.index] as string);\n    this.type = this.getFileType(this.images[this.index] as string);\n    this.srcIndex = this.index;\n    this.description = this.descriptions[this.index];\n    this.changeDetectorRef.markForCheck();\n\n    setTimeout(() => {\n      if (this.isLoaded(this.previewImage.nativeElement) || this.type === 'video') {\n        this.loading = false;\n        this.startAutoPlay();\n        this.changeDetectorRef.markForCheck();\n      } else if (this.type === 'video') {\n\n      }\n      else {\n        setTimeout(() => {\n          if (this.loading) {\n            this.showSpinner = true;\n            this.changeDetectorRef.markForCheck();\n          }\n        });\n\n        this.previewImage.nativeElement.onload = () => {\n          this.loading = false;\n          this.showSpinner = false;\n          this.previewImage.nativeElement.onload = null;\n          this.startAutoPlay();\n          this.changeDetectorRef.markForCheck();\n        };\n      }\n    });\n  }\n\n  private isLoaded(img): boolean {\n    if (!img.complete) {\n      return false;\n    }\n\n    return !(typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0);\n  }\n\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryOrderedImage} from '../ngx-gallery-ordered-image';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryAnimation} from '../ngx-gallery-animation';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() imageClick = new EventEmitter();\n  @Output() activeChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n              private elementRef: ElementRef, private helperService: NgxGalleryService) {\n  }\n\n  // @HostBinding('style.display') public display = 'inline-block';\n  // @HostBinding('style.background-color') public color = 'lime';\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay) {\n      this.startAutoPlay();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.lazyLoading) {\n      const indexes = [this.selectedIndex];\n      const prevIndex = this.selectedIndex - 1;\n\n      if (prevIndex === -1 && this.infinityMove) {\n        indexes.push(this.images.length - 1);\n      } else if (prevIndex >= 0) {\n        indexes.push(prevIndex);\n      }\n\n      const nextIndex = this.selectedIndex + 1;\n\n      if (nextIndex === this.images.length && this.infinityMove) {\n        indexes.push(0);\n      } else if (nextIndex < this.images.length) {\n        indexes.push(nextIndex);\n      }\n\n      return this.images.filter((img, i) => indexes.indexOf(i) !== -1);\n    } else {\n      return this.images;\n    }\n  }\n\n  startAutoPlay(): void {\n    this.stopAutoPlay();\n\n    this.timer = setInterval(() => {\n      if (!this.showNext()) {\n        this.selectedIndex = -1;\n        this.showNext();\n      }\n    }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (this.clickable) {\n      this.imageClick.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  show(index: number) {\n    this.selectedIndex = index;\n    this.activeChange.emit(this.selectedIndex);\n    this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext() && this.canChangeImage) {\n      this.selectedIndex++;\n\n      if (this.selectedIndex === this.images.length) {\n        this.selectedIndex = 0;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev() && this.canChangeImage) {\n      this.selectedIndex--;\n\n      if (this.selectedIndex < 0) {\n        this.selectedIndex = this.images.length - 1;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    }\n  }\n\n  setChangeTimeout() {\n    this.canChangeImage = false;\n    let timeout = 1000;\n\n    if (this.animation === NgxGalleryAnimation.Slide\n      || this.animation === NgxGalleryAnimation.Fade) {\n      timeout = 500;\n    }\n\n    setTimeout(() => {\n      this.canChangeImage = true;\n    }, timeout);\n  }\n\n  canShowNext(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex > 0;\n    } else {\n      return false;\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  getFileType(fileSource: string) {\n    return this.helperService.getFileType(fileSource);\n  }\n}\n","export class NgxGalleryOrder {\n  static Column = 1;\n  static Row = 2;\n  static Page = 3;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryOrder} from '../ngx-gallery-order';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryThumbnailsComponent implements OnInit, OnChanges {\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() activeChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedIndex) {\n      this.validateIndex();\n    }\n\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'thumbnails', () => this.moveRight(), () => this.moveLeft());\n    }\n\n    if (this.images) {\n      this.remainingCountValue = this.images.length - (this.rows * this.columns);\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n    this.setDefaultPosition();\n\n    this.index = 0;\n    this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.remainingCount) {\n      return this.images.slice(0, this.rows * this.columns);\n    } else if (this.lazyLoading && this.order !== NgxGalleryOrder.Row) {\n      let stopIndex = 0;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        stopIndex = this.index + ((this.columns * this.rows) * 2);\n      }\n\n      if (stopIndex <= this.minStopIndex) {\n        stopIndex = this.minStopIndex;\n      } else {\n        this.minStopIndex = stopIndex;\n      }\n\n      return this.images.slice(0, stopIndex);\n    } else {\n      return this.images;\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (!this.hasLink(index)) {\n      this.selectedIndex = index;\n      this.activeChange.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  hasLink(index: number): boolean {\n    if (this.links && this.links.length && this.links[index]) {\n      return true;\n    }\n  }\n\n  moveRight(): void {\n    if (this.canMoveRight()) {\n      this.index += this.moveSize;\n      const maxIndex = this.getMaxIndex() - this.columns;\n\n      if (this.index > maxIndex) {\n        this.index = maxIndex;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  moveLeft(): void {\n    if (this.canMoveLeft()) {\n      this.index -= this.moveSize;\n\n      if (this.index < 0) {\n        this.index = 0;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  canMoveRight(): boolean {\n    return this.index + this.columns < this.getMaxIndex();\n  }\n\n  canMoveLeft(): boolean {\n    return this.index !== 0;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = Math.floor(index / this.rows);\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = index % this.columns;\n    } else {\n      calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = index % this.rows;\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = Math.floor(index / this.columns);\n    } else {\n      calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n    return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n    return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n    this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\n\n    this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n    this.thumbnailsLeft = '0px';\n    this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n    if (this.remainingCount) {\n      return false;\n    } else {\n      return this.arrows && this.images && this.images.length > this.getVisibleCount()\n        && (!this.arrowsAutoHide || this.mouseenter);\n    }\n  }\n\n  validateIndex(): void {\n    if (this.images) {\n      let newIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        newIndex = Math.floor(this.selectedIndex / this.rows);\n      } else {\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n      }\n\n      if (this.remainingCount) {\n        newIndex = 0;\n      }\n\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\n        const maxIndex = this.getMaxIndex() - this.columns;\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n        this.setThumbnailsPosition();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  getFileType (fileSource: string): string {\n    return this.helperService.getFileType(fileSource);\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n    return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n      + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n    if (this.margin !== 0) {\n      return this.getSafeStyle('calc(' + (100 / count) + '% - '\n        + (((count - 1) * this.margin) / count) + 'px)');\n    } else {\n      return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n    }\n  }\n\n  private getMaxIndex(): number {\n    if (this.order === NgxGalleryOrder.Page) {\n      let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n      if (this.images.length % this.getVisibleCount() > this.columns) {\n        maxIndex += this.columns;\n      } else {\n        maxIndex += this.images.length % this.getVisibleCount();\n      }\n\n      return maxIndex;\n    } else {\n      return Math.ceil(this.images.length / this.rows);\n    }\n  }\n\n  private getVisibleCount(): number {\n    return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","import {NgxGalleryAction} from './ngx-gallery-action';\nimport {NgxGalleryOrder} from './ngx-gallery-order';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\nimport {NgxGalleryAnimation} from './ngx-gallery-animation';\nimport {NgxGalleryImageSize} from './ngx-gallery-image-size';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    thumbnailClasses?: string[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    thumbnailClasses?: string[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n        this.thumbnailClasses = use(obj.thumbnailClasses, []);\n\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import {SafeResourceUrl} from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  type: string;\n  index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  type: string;\n  index: number;\n\n  constructor(obj: INgxGalleryOrderedImage) {\n    this.src = obj.src;\n    this.type = obj.type;\n    this.index = obj.index;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from './ngx-gallery.service';\nimport {NgxGalleryOptions} from './ngx-gallery-options';\nimport {NgxGalleryImage} from './ngx-gallery-image';\nimport {NgxGalleryOrderedImage} from './ngx-gallery-ordered-image';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\n\n@Component({\n  selector: 'ngx-gallery',\n  templateUrl: './ngx-gallery.component.html',\n  styleUrls: ['./ngx-gallery.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [NgxGalleryService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[] = [{}];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thumbnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.transform') left: string;\n\n  constructor(private myElement: ElementRef, private helperService: NgxGalleryService) {\n  }\n\n  ngOnInit() {\n    this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n    this.sortOptions();\n    this.setBreakpoint();\n    this.setOptions();\n    this.checkFullWidth();\n    if (this.currentOptions) {\n      this.selectedIndex = this.currentOptions.startIndex as number;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n      || (this.images !== this.oldImages)) {\n      this.oldImagesLength = this.images.length;\n      this.oldImages = this.images;\n      this.setOptions();\n      this.setImages();\n\n      if (this.images && this.images.length) {\n        this.imagesReady.emit();\n      }\n\n      if (this.image) {\n        this.image.reset(this.currentOptions.startIndex as number);\n      }\n\n      if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n        && this.images.length <= 1) {\n        this.currentOptions.thumbnails = false;\n        this.currentOptions.imageArrows = false;\n      }\n\n      this.resetThumbnails();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.setBreakpoint();\n\n    if (this.prevBreakpoint !== this.breakpoint) {\n      this.setOptions();\n      this.resetThumbnails();\n    }\n\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n\n      if (this.fullWidthTimeout) {\n        clearTimeout(this.fullWidthTimeout);\n      }\n\n      this.fullWidthTimeout = setTimeout(() => {\n        this.checkFullWidth();\n      }, 200);\n    }\n  }\n\n  getImageHeight(): string {\n    return (this.currentOptions && this.currentOptions.thumbnails) ?\n      this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n    if (this.currentOptions && this.currentOptions.image) {\n      return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n        + this.currentOptions.thumbnailsMargin + 'px)';\n    } else {\n      return '100%';\n    }\n  }\n\n  getThumbnailsMarginTop(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  getThumbnailsMarginBottom(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  openPreview(index: number): void {\n    if (this.currentOptions.previewCustom) {\n      this.currentOptions.previewCustom(index);\n    } else {\n      this.previewEnabled = true;\n      this.preview.open(index);\n    }\n  }\n\n  onPreviewOpen(): void {\n    this.previewOpen.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.stopAutoPlay();\n    }\n  }\n\n  onPreviewClose(): void {\n    this.previewEnabled = false;\n    this.previewClose.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.startAutoPlay();\n    }\n  }\n\n  selectFromImage(index: number) {\n    this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n    this.select(index);\n\n    if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n      && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n      this.openPreview(this.selectedIndex);\n    }\n  }\n\n  show(index: number): void {\n    this.select(index);\n  }\n\n  showNext(): void {\n    this.image.showNext();\n  }\n\n  showPrev(): void {\n    this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1);\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex > 0);\n    } else {\n      return false;\n    }\n  }\n\n  previewSelect(index: number) {\n    this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n    this.thumbnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n    this.thumbnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n    return this.thumbnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n    return this.thumbnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n    if (this.thumbnails) {\n      this.thumbnails.reset(this.currentOptions.startIndex as number);\n    }\n  }\n\n  private select(index: number) {\n    this.selectedIndex = index;\n\n    this.change.emit({\n      index,\n      image: this.images[index]\n    });\n  }\n\n  private checkFullWidth(): void {\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n      this.width = document.body.clientWidth + 'px';\n      this.left = 'translateX(' + (-(document.body.clientWidth -\n        this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px)';\n    }\n  }\n\n  private setImages(): void {\n    this.images.forEach((img) =>\n        img.type = this.helperService.getFileType(img.url as string || img.big as string || img.medium as string || img.small as string || '')\n    );\n    this.smallImages = this.images.map((img) => img.small as string);\n    this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n      src: img.medium,\n      type: img.type,\n      index: i\n    }));\n    this.bigImages = this.images.map((img) => img.big as string);\n    this.descriptions = this.images.map((img) => img.description as string);\n    this.links = this.images.map((img) => img.url as string);\n    this.labels = this.images.map((img) => img.label as string);\n  }\n\n  private setBreakpoint(): void {\n    this.prevBreakpoint = this.breakpoint;\n    let breakpoints;\n\n    if (typeof window !== 'undefined') {\n      breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n        .map((opt) => opt.breakpoint);\n    }\n\n    if (breakpoints && breakpoints.length) {\n      this.breakpoint = breakpoints.pop();\n    } else {\n      this.breakpoint = undefined;\n    }\n  }\n\n  private sortOptions(): void {\n    this.options = [\n      ...this.options.filter((a) => a.breakpoint === undefined),\n      ...this.options\n        .filter((a) => a.breakpoint !== undefined)\n        .sort((a, b) => b.breakpoint - a.breakpoint)\n    ];\n  }\n\n  private setOptions(): void {\n    this.currentOptions = new NgxGalleryOptions({});\n\n    this.options\n      .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n      .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n    this.width = this.currentOptions.width as string;\n    this.height = this.currentOptions.height as string;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n    Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryArrowsComponent implements OnInit {\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() prevClick = new EventEmitter();\n  @Output() nextClick = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  handlePrevClick(): void {\n    this.prevClick.emit();\n  }\n\n  handleNextClick(): void {\n    this.nextClick.emit();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent implements OnInit/*, AfterViewInit*/ {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() closeClick: EventEmitter<Event> = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  handleClick(event: Event) {\n    if (!this.disabled) {\n      this.closeClick.emit(event);\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryBulletsComponent implements OnInit {\n  @Input() count: number;\n  @Input() active = 0;\n\n  @Output() bulletChange = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getBullets(): number[] {\n    return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n    this.bulletChange.emit(index);\n  }\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport {NgxGalleryComponent} from './ngx-gallery.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryArrowsComponent} from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryActionComponent} from './ngx-gallery-action/ngx-gallery-action.component';\nimport {NgxGalleryBulletsComponent} from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\n@Injectable()\nexport class CustomHammerConfig extends HammerGestureConfig  {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  } as any;\n}\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [ CommonModule],\n  exports: [NgxGalleryComponent],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n  ]\n})\nexport class NgxGalleryModule {\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.type = obj.type;\n        this.label = obj.label;\n    }\n}\n"]}